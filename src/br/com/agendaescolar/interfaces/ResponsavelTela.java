/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.agendaescolar.interfaces;

import br.com.agendaescolar.classes.Aluno;
import br.com.agendaescolar.classes.Anotacao;
import br.com.agendaescolar.classes.Responsavel;
import dao.DAOAluno;
import dao.DAOAnotacao;
import dao.DAOResponsavel;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dell1
 */
public class ResponsavelTela extends javax.swing.JInternalFrame implements ItemListener {

    /**
     * Creates new form ResponsavelTela
     */
    public ResponsavelTela() {
        initComponents();
        setSize(780, 500);
    }
     Responsavel r= new Responsavel();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxBuscarAluno = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButtonSalvar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextDescricao = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAnotacao = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jComboBoxBuscarAluno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxBuscarAlunoItemStateChanged(evt);
            }
        });
        jComboBoxBuscarAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBuscarAlunoActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxBuscarAluno);
        jComboBoxBuscarAluno.setBounds(140, 70, 159, 39);

        jLabel1.setText("Selecione Alunos");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(150, 40, 144, 14);

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSalvar);
        jButtonSalvar.setBounds(130, 300, 81, 23);

        jButton2.setText("Sair");
        getContentPane().add(jButton2);
        jButton2.setBounds(270, 300, 98, 23);
        getContentPane().add(jTextDescricao);
        jTextDescricao.setBounds(130, 190, 200, 70);

        jLabel2.setText("Descrição");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(150, 140, 70, 14);

        jTableAnotacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableAnotacao);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(350, 70, 310, 90);

        jLabel3.setText("Anotações");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(350, 30, 90, 14);

        jLabel5.setIcon(new javax.swing.ImageIcon("C:\\Users\\dell1\\Desktop\\fundo2.png")); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(-60, -230, 1040, 800);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxBuscarAlunoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxBuscarAlunoItemStateChanged
      
    }//GEN-LAST:event_jComboBoxBuscarAlunoItemStateChanged

    private void jComboBoxBuscarAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBuscarAlunoActionPerformed
     
    }//GEN-LAST:event_jComboBoxBuscarAlunoActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        DAOResponsavel objdaor= new DAOResponsavel();  
    //int idR=objdaor.retone();
    int idR=objdaor.ID;
         ArrayList<Aluno> lista = objdaor.retornarAlunos(idR);
      //  jComboBoxBuscarAluno.removeAllItems();
        for (Aluno meualuno : lista) {
   
            jComboBoxBuscarAluno.addItem(meualuno.toString());    
        } 
        montarTabela();
    }//GEN-LAST:event_formInternalFrameOpened
    private void montarTabela(){
         DAOResponsavel objdaor= new DAOResponsavel();  
          int idR=objdaor.ID;
     // TODO add your handling code here:
        //Dados para a montagem das Colunas
        String colunas[] = new String[]{"Id","Nome","Descrição","data"};
        //Criacao do objeto que define o modelo da Tabela
        //Passamos null no primeiro argumento, pois as linhas serão definidas
        //Dentro do foreach. Ele recebe como argumento um vetor de Objetos
        DefaultTableModel modelotabela = new DefaultTableModel(null,colunas);
        
        //Criação do objeto DAOAluno para recuperar os dados dos alunos
        //que estão na Tabela Aluno
        DAOAnotacao daoanotacao = new DAOAnotacao();
        //Chamada do método que retorna todos os alunos cadastrados
        //na tabela Aluno
        ArrayList<Anotacao> ListaA = daoanotacao.listarAnotacao(idR,"Responsavel");
        //ForEach que pega cada objeto aluno da ListaA e atribui
        //ao objeto Aluno a
        DAOAluno daoaluno = new DAOAluno();
        String nome="";
        for(Anotacao a : ListaA){
            //Nesta linha nos adicionamos as linhas na tabela
            //Montamos aqui um Vetor de Objetos
            nome = daoaluno.retornaNome(a.getIdaluno());
            modelotabela.addRow(new Object[]{a.getIdAnotacao(), nome, a.getDescricao(),a.getData()});
        }
        
        
        jTableAnotacao.setModel(modelotabela);
    }
    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
          // ResponsavelTela2 obj= new ResponsavelTela2();
          //obj.setVisible(true);
          DAOResponsavel objdaor= new DAOResponsavel();  
          int idR=objdaor.ID;
          String opcao= jComboBoxBuscarAluno.getSelectedItem().toString();
          System.out.println(opcao);
          DAOAluno obja= new DAOAluno();
          int idaluno= obja.retornaidA(opcao);
          System.out.println(idaluno);
          String descricao= jTextDescricao.getText();
          Anotacao objan= new Anotacao();
          objan.setDescricao(descricao);
          objan.setIdaluno(idaluno);
          objan.setIdresponsavel(idR);
         DAOAnotacao anotacao= new DAOAnotacao();
        try {
            anotacao.salvar(objan);
        } catch (SQLException ex) {
            Logger.getLogger(ResponsavelTela.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        montarTabela();
          
          
                

         
    }//GEN-LAST:event_jButtonSalvarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox<String> jComboBoxBuscarAluno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAnotacao;
    private javax.swing.JTextField jTextDescricao;
    // End of variables declaration//GEN-END:variables

    @Override
    public void itemStateChanged(ItemEvent ie) {
       
        String nomeR;
       
      /* nomeR=jComboBoxResponsavel.getSelectedItem().toString();
        
        DAOResponsavel objdaor= new DAOResponsavel();
        int idR;
        idR=objdaor.retornarResponsavel(nomeR);
        
        ArrayList<Aluno> lista = objdaor.retornarAlunos(idR);
        jComboBoxBuscarAluno.removeAllItems();
        for (Aluno meualuno : lista) {
   
            jComboBoxBuscarAluno.addItem(meualuno.toString());    
        }*/
    }
}
